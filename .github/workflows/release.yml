name: Release

on:
  workflow_call:
    inputs:
      version:
        description: 'Version to release'
        type: string

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-22.04

    name: Release ${{ inputs.version }}

    outputs:
      version: ${{ steps.version.outputs.version }}
      notes: ${{ steps.cleaned-notes.outputs.release-notes }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Remove optional "v" prefix
        id: version
        run: |
          VERSION=${{ inputs.version }}
          echo "version=${VERSION#v}" >> "$GITHUB_OUTPUT"

      - name: Generate release notes
        id: generated-notes
        uses: noprotocol/.github/.github/actions/release-notes
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # defined at ORG level (PAT)
          tag_name: v${{ steps.version.outputs.version }}
          branch: ${{ github.ref_name }}

      - name: Cleanup release notes
        id: cleaned-notes
        run: |
          NOTES=$(echo $NOTES | sed '/## What/d')
          NOTES=$(echo $NOTES | sed '/## New Contributors/,$d')
          echo "release-notes=${NOTES}" >> "$GITHUB_OUTPUT"
        env:
          NOTES: ${{ steps.generated-notes.outputs.release-notes }}

      - name: Create release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # defined at ORG level (PAT)
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: v${{ steps.version.outputs.version }}
          body: ${{ steps.cleaned-notes.outputs.release-notes }}
          target_commitish: ${{ github.ref_name }}
          make_latest: 'legacy'

  update-changelog:
    needs: release

    runs-on: ubuntu-22.04

    name: Update changelog

    steps:
      - name: Update changelog
        uses: noprotocol/.github/.github/actions/update-changelog.yml@main
        with:
          branch: ${{ github.ref_name }}
          version: "v${{ needs.release.outputs.version }}"
          notes: ${{ needs.release.outputs.notes }}

  sentry:
    needs: release

    runs-on: ubuntu-22.04

    name: Sentry Release ${{ inputs.version }}

    steps:
      - name: Create Sentry Release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }} # defined at ORG level at Github
          SENTRY_ORG: ${{ vars.SENTRY_ORG }} # defined at ORG level at Github
          SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }} # defined at REPO level at Github
        with:
          environment: production
          version: ${{ github.event.release.tag_name }}
